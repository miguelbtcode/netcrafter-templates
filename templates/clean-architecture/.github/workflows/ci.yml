name: Continuous Integration

on:
  push:
    branches: [main, develop, feature/**]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

env:
  DOTNET_VERSION: "9.0.x"
  SOLUTION_PATH: "CleanArchitecture.sln"

jobs:
  # Job 1: Build and Compile
  build:
    name: Build Solution
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore dependencies
        run: dotnet restore ${{ env.SOLUTION_PATH }}

      - name: Build solution
        run: dotnet build ${{ env.SOLUTION_PATH }} --configuration Release --no-restore

      - name: Publish build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            **/bin/Release/**
            !**/bin/Release/**/ref/**
          retention-days: 1

  # Job 2: Unit Tests
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore dependencies
        run: dotnet restore ${{ env.SOLUTION_PATH }}

      - name: Build solution
        run: dotnet build ${{ env.SOLUTION_PATH }} --configuration Release --no-restore

      - name: Run Domain Unit Tests
        run: dotnet test tests/Unit/Domain.UnitTests/*.csproj --configuration Release --no-build --verbosity normal --logger "trx;LogFileName=domain-tests.trx" --collect:"XPlat Code Coverage" --results-directory ./TestResults/Domain

      - name: Run Application Unit Tests
        run: dotnet test tests/Unit/Application.UnitTests/*.csproj --configuration Release --no-build --verbosity normal --logger "trx;LogFileName=application-tests.trx" --collect:"XPlat Code Coverage" --results-directory ./TestResults/Application

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: unit-test-results
          path: TestResults/**/*.trx
          retention-days: 30

      - name: Upload code coverage
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: code-coverage-unit
          path: TestResults/**/coverage.cobertura.xml
          retention-days: 30

  # Job 3: Architecture Tests
  architecture-tests:
    name: Architecture Tests
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore dependencies
        run: dotnet restore ${{ env.SOLUTION_PATH }}

      - name: Build solution
        run: dotnet build ${{ env.SOLUTION_PATH }} --configuration Release --no-restore

      - name: Run Architecture Tests
        run: dotnet test tests/Architecture/**/*.csproj --configuration Release --no-build --verbosity normal --logger "trx;LogFileName=architecture-tests.trx" --results-directory ./TestResults/Architecture

      - name: Upload architecture test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: architecture-test-results
          path: TestResults/**/*.trx
          retention-days: 30

  # Job 4: Integration Tests (with Testcontainers)
  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore dependencies
        run: dotnet restore ${{ env.SOLUTION_PATH }}

      - name: Build solution
        run: dotnet build ${{ env.SOLUTION_PATH }} --configuration Release --no-restore

      - name: Run Integration Tests (Testcontainers)
        run: dotnet test tests/Integration/**/*.csproj --configuration Release --no-build --verbosity normal --logger "trx;LogFileName=integration-tests.trx" --results-directory ./TestResults/Integration

      - name: Upload integration test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: integration-test-results
          path: TestResults/**/*.trx
          retention-days: 30

  # Job 5: E2E Tests (with Testcontainers)
  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore dependencies
        run: dotnet restore ${{ env.SOLUTION_PATH }}

      - name: Build solution
        run: dotnet build ${{ env.SOLUTION_PATH }} --configuration Release --no-restore

      - name: Run E2E Tests (Testcontainers)
        run: dotnet test tests/E2E/**/*.csproj --configuration Release --no-build --verbosity normal --logger "trx;LogFileName=e2e-tests.trx" --results-directory ./TestResults/E2E

      - name: Upload E2E test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: e2e-test-results
          path: TestResults/**/*.trx
          retention-days: 30

  # Job 6: Code Quality & Security
  code-quality:
    name: Code Quality & Security
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore dependencies
        run: dotnet restore ${{ env.SOLUTION_PATH }}

      - name: Build solution
        run: dotnet build ${{ env.SOLUTION_PATH }} --configuration Release --no-restore

      - name: Run code format check
        run: dotnet format --verify-no-changes --no-restore
        continue-on-error: true

      - name: Run security vulnerability scan
        run: |
          dotnet list ${{ env.SOLUTION_PATH }} package --vulnerable --include-transitive 2>&1 | tee security-scan.txt
          if grep -q "has the following vulnerable packages" security-scan.txt; then
            echo "::warning::Vulnerable packages detected"
          fi
        continue-on-error: true

      - name: Upload security scan results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-scan-results
          path: security-scan.txt
          retention-days: 30

  # Job 7: Test Results Summary
  test-summary:
    name: Test Results Summary
    runs-on: ubuntu-latest
    needs: [unit-tests, architecture-tests, integration-tests, e2e-tests]
    if: always()

    steps:
      - name: Download all test results
        uses: actions/download-artifact@v4
        with:
          path: all-test-results

      - name: Display test summary
        run: |
          echo "## Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "âœ… All test suites completed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Test Artifacts" >> $GITHUB_STEP_SUMMARY
          echo "- Unit Test Results" >> $GITHUB_STEP_SUMMARY
          echo "- Architecture Test Results" >> $GITHUB_STEP_SUMMARY
          echo "- Integration Test Results" >> $GITHUB_STEP_SUMMARY
          echo "- E2E Test Results" >> $GITHUB_STEP_SUMMARY
          echo "- Code Coverage Reports" >> $GITHUB_STEP_SUMMARY
